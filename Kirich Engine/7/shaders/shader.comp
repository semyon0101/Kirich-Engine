#version 450

struct Particle {
	vec2 position;
    int index;
};

layout (binding = 0) uniform ParameterUBO {
    int fps;
    int width;
    int height;
} ubo;

layout(std140, binding = 1) readonly buffer ParticleSSBOIn {
   Particle particlesIn[ ];
};

layout(std140, binding = 2) buffer ParticleSSBOOut {
   Particle particlesOut[ ];
};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main() 
{
    if(gl_GlobalInvocationID.x==0){
    int b=0;
        for(int i = 0;i<10000000;++i){
        b++;
        float r = sqrt(b);
        }
    
    } 
    for(int i = 0;i<8;++i){
        if (particlesOut[ i].index==-1 ){
            particlesOut[ i].index= int (gl_GlobalInvocationID.x);
            break;
        }
    }
    
    
}
